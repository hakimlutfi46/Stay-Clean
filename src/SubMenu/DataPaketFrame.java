/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SubMenu;

import SubMenu.Popup.DataPaket.PopupKonfirmasi;
import SubMenu.Popup.PopupGagal;
import SubMenu.Popup.PopupSukses;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import java.awt.Color;
import java.sql.*;
import javax.swing.JDesktopPane;
import javax.swing.RowFilter;
import javax.swing.table.*;
import koneksi.Connect;
import utility.custom_table.table.TableCustom;

/**
 *
 * @author perlengkapan
 */
public class DataPaketFrame extends javax.swing.JInternalFrame {

    /**
     * Creates new form DataPaketFrame
     */
    private DefaultTableModel tableModel;
    boolean hapusEdit = false;

    public DataPaketFrame() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI bif = (BasicInternalFrameUI) this.getUI();
        bif.setNorthPane(null);
        refreshTable();

        TableCustom.apply(jScrollPane2, TableCustom.TableType.MULTI_LINE);
        tbl_dataPaket.getTableHeader().setBackground(new Color(0, 168, 209));

        readComboKategori();

        this.hapusEdit = false;
    }

    private String formatDec(int val) {
        return String.format("%,d", val).replace(',', '.');
    }

    private String reFormat(String val) {
        return val.replaceAll("\\.", "");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_tambah = new javax.swing.JLabel();
        btn_edit = new javax.swing.JLabel();
        btn_hapus = new javax.swing.JLabel();
        btn_clear = new javax.swing.JLabel();
        txt_filter = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_dataPaket = new javax.swing.JTable();
        txt_paket = new javax.swing.JTextField();
        combo_durasiHari = new javax.swing.JComboBox<>();
        combo_durasiJam = new javax.swing.JComboBox<>();
        combo_kategori = new javax.swing.JComboBox<>();
        txt_harga = new javax.swing.JTextField();
        Background = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(1110, 640));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_tambah.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_tambah.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_tambahMouseClicked(evt);
            }
        });
        getContentPane().add(btn_tambah, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 300, 147, 40));

        btn_edit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_edit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_editMouseClicked(evt);
            }
        });
        getContentPane().add(btn_edit, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 300, 147, 40));

        btn_hapus.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_hapus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_hapusMouseClicked(evt);
            }
        });
        getContentPane().add(btn_hapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 300, 148, 40));

        btn_clear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_clear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_clearMouseClicked(evt);
            }
        });
        getContentPane().add(btn_clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 300, 148, 40));

        txt_filter.setBackground(new Color(0,0,0,0));
        txt_filter.setFont(new java.awt.Font("Poppins", 0, 16)); // NOI18N
        txt_filter.setBorder(null);
        txt_filter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_filterKeyReleased(evt);
            }
        });
        getContentPane().add(txt_filter, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 303, 190, 30));

        jScrollPane2.setBackground(new java.awt.Color(0, 168, 209));
        jScrollPane2.setBorder(null);

        tbl_dataPaket.setFont(new java.awt.Font("Poppins Medium", 0, 15)); // NOI18N
        tbl_dataPaket.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbl_dataPaket.setFocusable(false);
        tbl_dataPaket.setSelectionBackground(new java.awt.Color(163, 211, 232));
        tbl_dataPaket.getTableHeader().setResizingAllowed(false);
        tbl_dataPaket.getTableHeader().setReorderingAllowed(false);
        tbl_dataPaket.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_dataPaketMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbl_dataPaket);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 360, 1010, 240));

        txt_paket.setBackground(new Color(0,0,0,0));
        txt_paket.setFont(new java.awt.Font("Poppins", 0, 16)); // NOI18N
        txt_paket.setForeground(new java.awt.Color(0, 0, 0));
        txt_paket.setBorder(null);
        getContentPane().add(txt_paket, new org.netbeans.lib.awtextra.AbsoluteConstraints(173, 99, 290, 30));

        combo_durasiHari.setBackground(new Color(0,0,0,0));
        combo_durasiHari.setFont(new java.awt.Font("Poppins", 0, 16)); // NOI18N
        combo_durasiHari.setForeground(new java.awt.Color(0, 0, 0));
        combo_durasiHari.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7" }));
        getContentPane().add(combo_durasiHari, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 99, 133, 30));

        combo_durasiJam.setBackground(new Color(0,0,0,0));
        combo_durasiJam.setFont(new java.awt.Font("Poppins", 0, 16)); // NOI18N
        combo_durasiJam.setForeground(new java.awt.Color(0, 0, 0));
        combo_durasiJam.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6" }));
        getContentPane().add(combo_durasiJam, new org.netbeans.lib.awtextra.AbsoluteConstraints(718, 99, 130, 30));

        combo_kategori.setBackground(new Color(0,0,0,0));
        combo_kategori.setFont(new java.awt.Font("Poppins", 0, 16)); // NOI18N
        combo_kategori.setForeground(new java.awt.Color(0, 0, 0));
        combo_kategori.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih Kategori..." }));
        getContentPane().add(combo_kategori, new org.netbeans.lib.awtextra.AbsoluteConstraints(162, 195, 310, 30));

        txt_harga.setBackground(new Color(0,0,0,0));
        txt_harga.setFont(new java.awt.Font("Poppins", 0, 16)); // NOI18N
        txt_harga.setForeground(new java.awt.Color(0, 0, 0));
        txt_harga.setBorder(null);
        txt_harga.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_hargaKeyReleased(evt);
            }
        });
        getContentPane().add(txt_harga, new org.netbeans.lib.awtextra.AbsoluteConstraints(544, 195, 300, 30));

        Background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/img/layout/Data Paket Frame.jpg"))); // NOI18N
        Background.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        Background.setMinimumSize(new java.awt.Dimension(2147483647, 2147483647));
        Background.setPreferredSize(new java.awt.Dimension(1110, 650));
        getContentPane().add(Background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1100, 650));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void clear() {
        txt_paket.setText("");
        txt_harga.setText("");
        combo_durasiHari.setSelectedIndex(0);
        combo_durasiJam.setSelectedIndex(0);
        combo_kategori.setSelectedIndex(0);
        txt_filter.setText("");
        tbl_dataPaket.clearSelection();
        this.hapusEdit = false;
    }

    private void insertDb(String sql) {
        try {
            Connection conn = Connect.GetConnection();
            PreparedStatement pst = conn.prepareStatement(sql);
            pst.execute();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

    private ResultSet readDb(String sql) {
        ResultSet result = null;

        try {
            Connection conn = Connect.GetConnection();
            PreparedStatement pst = conn.prepareStatement(sql);
            ResultSet res = pst.executeQuery();
            result = res;
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }

        return result;
    }

    private void updateDb(String sql) {
        try {
            Connection conn = Connect.GetConnection();
            PreparedStatement pst = conn.prepareStatement(sql);
            pst.executeUpdate();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

    private void readComboKategori() {
        try {
            ResultSet res = readDb("select * from paket");
            while (res.next()) {
                combo_kategori.addItem(res.getString("tipe_paket"));
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

    private void setColumnWidth() {
        TableColumnModel columnModel = tbl_dataPaket.getColumnModel();
//        columnModel.getColumn(0).setMinWidth(60);
        columnModel.getColumn(0).setMaxWidth(50);
        columnModel.getColumn(0).setPreferredWidth(50);
        columnModel.getColumn(1).setMinWidth(0);
        columnModel.getColumn(1).setMaxWidth(0);
        columnModel.getColumn(1).setPreferredWidth(0);
        columnModel.getColumn(2).setMinWidth(0);
        columnModel.getColumn(2).setMaxWidth(0);
        columnModel.getColumn(2).setPreferredWidth(0);
        columnModel.getColumn(3).setPreferredWidth(150);
        columnModel.getColumn(4).setPreferredWidth(100);
        columnModel.getColumn(5).setPreferredWidth(80);
        columnModel.getColumn(6).setPreferredWidth(80);
        columnModel.getColumn(7).setPreferredWidth(120);

    }

    public void refreshTable() {
        // Create new default table model
        tableModel = new DefaultTableModel() {
            boolean[] canEdit = new boolean[]{
                false, false, false, false, false, false, false, false
            };

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        };

        // Add columns to the model
        tableModel.addColumn("No");
        tableModel.addColumn("Id Paket");
        tableModel.addColumn("Id Detail Paket");
        tableModel.addColumn("Nama Paket");
        tableModel.addColumn("Kategori");
        tableModel.addColumn("Durasi (Hari)");
        tableModel.addColumn("Durasi (Jam)");
        tableModel.addColumn("Harga / Satuan");

        // Get data from database
        try {
            int no = 1;

            ResultSet rs = readDb("SELECT * FROM paket JOIN detail_paket ON paket.id_paket = detail_paket.id_paket order by id_detailPaket ");
            while (rs.next()) {
                tableModel.addRow(new Object[]{
                    no++,
                    rs.getString("id_paket"),
                    rs.getString("id_detailPaket"),
                    rs.getString("nama_paket"),
                    rs.getString("tipe_paket"),
                    rs.getString("durasi_paket (hari)"),
                    rs.getString("durasi_paket (jam)"),
                    formatDec(Integer.parseInt(rs.getString("harga_paket")))
                });
            }
            // Set table model to table
            tbl_dataPaket.setModel(tableModel);
            setColumnWidth(); // Menjalankan method untuk mengatur lebar kolom
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

    private void filterTable(String filter) {
        DefaultTableModel model = (DefaultTableModel) tbl_dataPaket.getModel(); // Mendapatkan model tabel

        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model); // Membuat sorter untuk model tabel
        tbl_dataPaket.setRowSorter(sorter); // Menetapkan sorter pada tabel

        RowFilter<DefaultTableModel, Object> rowFilter = RowFilter.regexFilter("(?i)" + filter); // Membuat row filter dengan teks filter (case-insensitive)
        sorter.setRowFilter(rowFilter); // Menetapkan row filter pada sorter
    }
    private void btn_tambahMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_tambahMouseClicked

        if (this.hapusEdit == true) {
            new PopupGagal("Data sudah ada dan tidak bisa ditambah<br>Silahkan klik tombol edit untuk update data").setVisible(true);
        } else {
            if (txt_paket.getText().equals("") || combo_kategori.getSelectedIndex() == 0 || txt_harga.getText().equals("")) {
                new PopupGagal("Silahkan isi data dengan benar").setVisible(true);
            } else if (combo_durasiHari.getSelectedIndex() == 0 && combo_durasiJam.getSelectedIndex() == 0) {
                new PopupGagal("Silahkan pilih durasi paket terlebih dahulu").setVisible(true);
            } else {
                try {
                    // Mengambil id_paket
                    ResultSet hasilCariIdPaket = readDb("select * from paket where tipe_paket = '" + combo_kategori.getSelectedItem() + "'"
                    );
                    hasilCariIdPaket.next();
                    String idPaket = hasilCariIdPaket.getString("id_paket");

                    //cek paket ada atau tidak
                    ResultSet resultCekDb = readDb("select * from detail_paket where nama_paket = '" + txt_paket.getText() + "' and id_paket = '" + idPaket + "'");
                    if (resultCekDb.next()) {
                        new PopupGagal("Data sudah ada pada database").setVisible(true);
                    } else {
                        // Menambahkan data ke dalam tabel "detail_paket" dengan menggunakan nilai "id_paket" sebagai foreign key
                        insertDb("INSERT INTO detail_paket VALUES (null, '" + idPaket + "', '" + txt_paket.getText() + "', "
                                + "'" + reFormat(txt_harga.getText()) + "', '" + combo_durasiHari.getSelectedItem() + "', "
                                + "'" + combo_durasiJam.getSelectedItem() + "')");

                        // Menampilkan popup atau pesan keberhasilan
                        JDesktopPane desktopPane = getDesktopPane();
                        new PopupSukses("Data berhasil ditambahkan", "dataPaket", desktopPane).setVisible(true);
                        this.hapusEdit = false;
                    }

                } catch (Exception e) {
                    System.out.println(e.getMessage());
                    new PopupGagal("Data gagal ditambahkan").setVisible(true);
                }
            }
        }

    }//GEN-LAST:event_btn_tambahMouseClicked

    private void btn_editMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_editMouseClicked
        System.out.println(reFormat(txt_harga.getText()));
        if (this.hapusEdit == false) {
            new PopupGagal("Silahkan pilih datanya terlebih dahulu").setVisible(true);
        } else {

            if (txt_paket.getText().equals("") || combo_kategori.getSelectedIndex() == 0 || txt_harga.getText().equals("")) {
                new PopupGagal("Silahkan isi data dengan benar").setVisible(true);
            } else if (combo_durasiHari.getSelectedIndex() == 0 && combo_durasiJam.getSelectedIndex() == 0) {
                new PopupGagal("Silahkan pilih durasi paket terlebih dahulu").setVisible(true);
            } else {
                try {
                    int i = tbl_dataPaket.getSelectedRow();
                    TableModel model = tbl_dataPaket.getModel();

                    String idDetailPaket = model.getValueAt(i, 2).toString();
                    String idPaket = combo_kategori.getSelectedItem().toString();

                    //ambil id paket
                    ResultSet res = readDb("Select * from paket where tipe_paket = '" + idPaket + "'");
                    res.next();

                    ResultSet resultCekDb = readDb("select * from detail_paket where nama_paket = '" + txt_paket.getText() + "' and id_paket = '" + idPaket + "'");
                    if (resultCekDb.next()) {
                        new PopupGagal("Data sudah ada pada database").setVisible(true);
                    } else {
                        updateDb("update detail_paket set id_paket ='" + res.getString("id_paket") + "', "
                                + "nama_paket = '" + txt_paket.getText() + "', harga_paket = '" + reFormat(txt_harga.getText()) + "', "
                                + "`durasi_paket (hari)` = '" + Integer.parseInt(combo_durasiHari.getSelectedItem().toString()) + "', "
                                + "`durasi_paket (jam)` = '" + Integer.parseInt(combo_durasiJam.getSelectedItem().toString()) + "' where id_detailPaket = '" + idDetailPaket + "'");

                        System.out.println();
                        JDesktopPane desktopPane = getDesktopPane();
                        new PopupSukses("Data berhasil diedit", "dataPaket", desktopPane).setVisible(true);
                        this.hapusEdit = false;
                    }
                } catch (Exception e) {
                    System.out.println(e.getMessage());
                    new PopupGagal("Data gagal diedit").setVisible(true);
                }
            }
        }
    }//GEN-LAST:event_btn_editMouseClicked

    private void btn_hapusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_hapusMouseClicked
        if (this.hapusEdit == false) {
            new PopupGagal("Silahkan pilih datanya terlebih dahulu").setVisible(true);
        } else {
            int i = tbl_dataPaket.getSelectedRow();
            TableModel model = tbl_dataPaket.getModel();

            String idDetailPaket = model.getValueAt(i, 2).toString();

            JDesktopPane desktopPane = getDesktopPane();
            new PopupKonfirmasi("Apakah yakin ingin menghapus data ini?", idDetailPaket, desktopPane).setVisible(true);
            this.hapusEdit = false;
        }
    }//GEN-LAST:event_btn_hapusMouseClicked

    private void btn_clearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_clearMouseClicked
        clear();
    }//GEN-LAST:event_btn_clearMouseClicked

    private void tbl_dataPaketMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_dataPaketMouseClicked
        this.hapusEdit = true;

        int i = tbl_dataPaket.getSelectedRow();
        TableModel model = tbl_dataPaket.getModel();

        String field4 = model.getValueAt(i, 3).toString();
        String field5 = model.getValueAt(i, 4).toString();
        String field6 = model.getValueAt(i, 5).toString();
        String field7 = model.getValueAt(i, 6).toString();
        String field8 = model.getValueAt(i, 7).toString();

        txt_paket.setText(field4);
        combo_kategori.setSelectedItem(field5);
        combo_durasiHari.setSelectedItem(field6);
        combo_durasiJam.setSelectedItem(field7);
        txt_harga.setText(field8);

    }//GEN-LAST:event_tbl_dataPaketMouseClicked

    private void txt_filterKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_filterKeyReleased
        // Get the filter text
        String filter = txt_filter.getText(); // Mendapatkan teks filter dari komponen txt_filter
        filterTable(filter); // Memanggil method filterTable dengan argumen filter
    }//GEN-LAST:event_txt_filterKeyReleased

    private void txt_hargaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_hargaKeyReleased
        txt_harga.setText(txt_harga.getText().replaceAll("[^0-9]", ""));
        int inputanHarga = Integer.parseInt(reFormat(txt_harga.getText()));
        txt_harga.setText(formatDec(inputanHarga));

    }//GEN-LAST:event_txt_hargaKeyReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Background;
    private javax.swing.JLabel btn_clear;
    private javax.swing.JLabel btn_edit;
    private javax.swing.JLabel btn_hapus;
    private javax.swing.JLabel btn_tambah;
    private javax.swing.JComboBox<String> combo_durasiHari;
    private javax.swing.JComboBox<String> combo_durasiJam;
    private javax.swing.JComboBox<String> combo_kategori;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tbl_dataPaket;
    private javax.swing.JTextField txt_filter;
    private javax.swing.JTextField txt_harga;
    private javax.swing.JTextField txt_paket;
    // End of variables declaration//GEN-END:variables
}
